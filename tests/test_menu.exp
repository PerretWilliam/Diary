#!/usr/bin/expect -f 

set testName "test_menu"
set directory "log"
set file "$testName.log"

if {![file exists $directory]} {
  exec mkdir $directory
}
log_file -noappend ./$directory/$file

set timeout 1
expect_after timeout { send_user "\nEchec du $testName ! Temps dépassé ! Les données ont été écrites dans : /tests/$directory/$file\n" ; exit 1 }

proc first_menu {char} {
  expect "Bienvenue, que souhaitez-vous faire ?"
  expect -re "Crée un nouvel diary"
  expect -re "Charger un diary"
  expect -re "Supprimer un diary"
  expect -re "Quitter"
  send "$char\n"
}

proc menu {char} {
  expect "Bienvenue dans l'diary."
  expect -re "Modifier l'diary"
  expect -re "Afficher l'diary"
  expect -re "Ajouter un événement"
  expect -re "Supprimer un événement"
  expect -re "Exporter au format HTML"
  expect -re "Enregistrer l'diary"
  expect -re "Quitter"
  send "$char\n"
}

spawn ../diary

### Menu show when the user starts the program
first_menu 4
expect "Erreur : aucune action ne correspond à la sélection !"
first_menu "Mot"
expect "Erreur : aucune action ne correspond à la sélection !"
first_menu 1

### Create the diary

## We start by the title
expect -re "Saisissez le titre de l'diary"
send "\n"
expect "Erreur : saisissez un titre non vide !"
expect -re "Saisissez le titre de l'diary"
send "Nouveldiary\n"

## Then with the description
expect -re "Saisissez la description de l'diary"
send "Description de mon premier diary,\nje veux qu'il soit beau et,\nplein de saut de ligne.\r.\n"

menu 7
expect "Erreur : aucune action ne correspond à la sélection !"
menu "Petit mot"
expect "Erreur : aucune action ne correspond à la sélection !"

### Show diary
menu 2
expect -re "Nouveldiary.*Description.*Aucun.*"
send "\n"

### Edit the diary
menu 1

## We start by the title
expect -re "Saisissez le titre de l'diary"
send "/NouveldiaryModifie\n"
expect "Erreur : saisissez un titre sans '/' !"
expect -re "Saisissez le titre de l'diary"
send "NouveldiaryModifie\n"

## Then with the description
expect -re "Saisissez la description de l'diary"
send "Description de mon premier diary modifie,\nje veux qu'il soit meilleur et,\nplein de saut de ligne lui aussi.\r.\n"

### Show diary
menu 2
expect -re "Nouveldiary.*Description.*Aucun.*"
send "\n" 

### Quit the diary
menu q

### Ask if the user wants to save the diary
expect "L'diary a été modifié ! L'enregistrer ?"
expect "1. Oui"
expect "2. Non"
send "3\n"
expect "Erreur : réponse invalide !"
## We don't save it
expect "L'diary a été modifié ! L'enregistrer ?"
expect "1. Oui"
expect "2. Non"
send "1\n"

expect -re "L'diary a été enregistré dans le fichier.*"

expect eof

spawn ../diary

first_menu 3

expect -re "Donnez le nom de l'diary à supprimer.*"
send "NouveldiaryModifia\n"

expect "Erreur : l'diary demandé n'existe pas."

expect -re "Donnez le nom de l'diary à supprimer.*"
send "NouveldiaryModifie\n"

expect -re "L'diary à l'emplacement"

first_menu "q"

expect eof

send_user "Test $testName réussi avec succès ! Les données ont été écrites dans : /tests/$directory/$file\n"
