#!/usr/bin/expect -f 

# Set the test name, the directory and the file name
set testName "test_evenement"
set directory "log"
set file "$testName.log"

# Create the directory to store the log file
if {![file exists $directory]} {
  exec mkdir $directory
}

# Set the log file to write the output of the test in it
log_file -noappend ./$directory/$file

# Set the timeout to 1 second
set timeout 1
expect_after timeout { send_user "\nEchec du $testName ! Temps dépassé ! Les données ont été écrites dans : /tests/$directory/$file\n" ; exit 1 }

proc create_file {} {

  # Set the path and the filename
  set path [exec pwd]/export
  set filename "$path/Anniversaires.txt"

  # Create the directory
  exec mkdir -p $path

  # Open the file in write mode
  set file [open $filename "w"]

  ## Write data in the file
  # Write the diary title and description
  puts $file "Anniversaires"
  puts $file "Description de mon premier diary,"
  puts $file "il contient tous les anniversaire et,"
  puts $file "plein de saut de ligne."
  puts $file "."

  # Write the first event
  puts $file "81b92f7939"
  puts $file "Anniversaire Louise"
  puts $file "L'anniversaire sera dans un restaurant chic."
  puts $file "Nous avons besoin de roses."
  puts $file "Je dois appeler Sébastien."
  puts $file "."
  puts $file "21/03/2024 21:59"
  puts $file "21/03/2024 21:59"

  # Write the second event
  puts $file "4984edaebf"
  puts $file "Anniversaire Louise"
  puts $file "L'anniversaire sera dans un restaurant chic."
  puts $file "Nous avons besoin de roses."
  puts $file "Je dois appeler Sébastien."
  puts $file "."
  puts $file "21/03/2024 21:59"
  puts $file "21/03/2024 21:59"

  # Close the file
  close $file
}

proc first_menu {char} {
  expect "Bienvenue, que souhaitez-vous faire ?"
  expect -re "Crée un nouvel diary"
  expect -re "Charger un diary"
  expect -re "Supprimer un diary"
  expect -re "Quitter"
  send "$char\n"
}

proc menu {char} {
  expect "Bienvenue dans l'diary."
  expect -re "Modifier l'diary"
  expect -re "Afficher l'diary"
  expect -re "Ajouter un événement"
  expect -re "Supprimer un événement"
  expect -re "Exporter au format HTML"
  expect -re "Enregistrer l'diary"
  expect -re "Quitter"
  send "$char\n"
}

# Create the file
create_file

spawn ../diary

first_menu 1

### Create a diary with a title and a description
expect -re "Saisissez le titre de l'diary.*"
send "Anniversaires\n"
expect -re "Saisissez la description de l'diary.*"
send "Description de mon premier diary,\nil contient tous les anniversaire et,\nplein de saut de ligne.\r.\n"

### Create an event
menu 3

## Title and description
expect -re "Saisissez le titre de l'évènement.*"
send "\n"
expect "Erreur : saisissez un titre non vide !"

expect -re "Saisissez le titre de l'évènement.*"
send "Anniversaire Louise\n"
expect -re "Saisissez la description de l'évènement.*"
send "L'anniversaire sera dans un restaurant chic.\nNous avons besoin de roses.\nJe dois appeler Sébastien.\r.\n"

## Create the dates
expect -re "Saisissez la date de début.*"
send "21 02 2024 21 59\n"
expect "Erreur : format de la date incorrect !"
expect -re "Saisissez la date de début.*"
send "21/02/2024 21:59\n"
expect "Voulez-vous que la date de début soit également la date de fin ?"
expect "1. Oui"
expect "2. Non"
send "3\n"
expect "Erreur : ce n'est pas une réponse valide !"
expect "Voulez-vous que la date de début soit également la date de fin ?"
send "2\n"
expect -re "Saisissez la date de fin.*"
send "29/02/2023 12:00\n"
expect "Erreur : date non valide !"
expect -re "Saisissez la date de fin.*"
send "29/02/2024 12:00\n"

### Create an second event
menu 3 

## Title and description
expect -re "Saisissez le titre de l'évènement.*"
send "Anniversaire Marc\n"
expect -re "Saisissez la description de l'évènement.*"
send "L'anniversaire sera dans une salle des fêtes.\nNous avons besoin de bonbons.\nJe dois appeler Louise.\r.\n"

## Create the dates
expect -re "Saisissez la date de début.*"
send "30/06/2024 21:59\n"
expect -re "Voulez-vous que la date de début soit également la date de fin ?"
expect "1. Oui"
expect "2. Non"
send "2\n"
expect -re "Saisissez la date de fin.*"
send "28/02/2022 12:00\n"

expect "Erreur : les dates sont inversées !"

expect -re "Saisissez la date de début.*"
send "30/06/2024 21:59\n"
expect -re "Voulez-vous que la date de début soit également la date de fin ?"
expect "1. Oui"
expect "2. Non"
send "2\n"
expect -re "Saisissez la date de fin.*"
send "28/02/2025 12:00\n"

### Print the diary
menu 2
send "\n"

menu "q"

# Ask to save the diary
expect "L'diary a été modifié ! L'enregistrer ?"
expect "1. Oui"
expect "2. Non"
send "2\n"

# Close the program
expect eof

# Launch the program again
spawn ../diary

# Load the diary
first_menu 2
expect -re "Donnez le nom de l'diary à charger.*"
send "Anniversaires\n"

expect "L'diary a été chargé."

### Print the diary
menu 2
send "\n"

# Delete an event
menu 4
expect -re "Donnez le titre de l'évènement à supprimer.*"
send "Anniversaire Louise\n"

expect -re "Donnez l'ID de l'évènement à supprimer.*"
send "81b92f7939\n"

expect -re "L'évènement avec l'ID"

# Save the diary
menu 6
expect -re "L'diary a été enregistré dans le fichier"

# Close the program
menu "q"

expect eof
send_user "Test $testName réussi avec succès ! Les données ont été écrites dans : /tests/$directory/$file\n"
